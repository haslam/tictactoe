// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Board />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="winnerText"
        >
          
        </h2>,
        <Cards
          cards={
            Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ]
          }
          handlePick={[Function]}
        />,
        <button
          className="resetButton"
          onClick={[Function]}
        >
          Reset
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "winnerText",
        },
        "ref": null,
        "rendered": "",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "cards": Array [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
          "handlePick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Reset",
          "className": "resetButton",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Reset",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="winnerText"
          >
            
          </h2>,
          <Cards
            cards={
              Array [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
              ]
            }
            handlePick={[Function]}
          />,
          <button
            className="resetButton"
            onClick={[Function]}
          >
            Reset
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "winnerText",
          },
          "ref": null,
          "rendered": "",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "cards": Array [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
            ],
            "handlePick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reset",
            "className": "resetButton",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Reset",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
